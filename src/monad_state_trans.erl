%%%-------------------------------------------------------------------
%%% @author Chen Slepher <slepheric@gmail.com>
%%% @copyright (C) 2017, Chen Slepher
%%% @doc
%%%
%%% @end
%%% Created :  1 Nov 2017 by Chen Slepher <slepheric@gmail.com>
%%%-------------------------------------------------------------------
-module(monad_state_trans).

%% API
-export([]).

-callback get(M) -> monad:monadic(M, _S)  when M :: monad:monad().
-callback put(_S, M)  -> monad:monadic(M, ok)  when M :: monad:monad().
-callback state(fun((S) -> {A, S}), M) -> monad:monadic(M, A)  when M :: monad:monad().

%%%===================================================================
%%% API
%%%===================================================================

%%--------------------------------------------------------------------
%% @doc
%% @spec
%% @end
%%--------------------------------------------------------------------

%%%===================================================================
%%% Internal functions
%%%===================================================================
